
AVRASM ver. 2.1.30  D:\1KULIAH\.SEMESTER 2\KOMUNIKASI DATA\Final Peojek\UAS KOMDAT\KOMDAT\Debug\List\final.asm Thu Jun 27 13:09:46 2024

D:\1KULIAH\.SEMESTER 2\KOMUNIKASI DATA\Final Peojek\UAS KOMDAT\KOMDAT\Debug\List\final.asm(1083): warning: Register r4 already defined by the .DEF directive
D:\1KULIAH\.SEMESTER 2\KOMUNIKASI DATA\Final Peojek\UAS KOMDAT\KOMDAT\Debug\List\final.asm(1084): warning: Register r5 already defined by the .DEF directive
D:\1KULIAH\.SEMESTER 2\KOMUNIKASI DATA\Final Peojek\UAS KOMDAT\KOMDAT\Debug\List\final.asm(1085): warning: Register r6 already defined by the .DEF directive
D:\1KULIAH\.SEMESTER 2\KOMUNIKASI DATA\Final Peojek\UAS KOMDAT\KOMDAT\Debug\List\final.asm(1086): warning: Register r7 already defined by the .DEF directive
D:\1KULIAH\.SEMESTER 2\KOMUNIKASI DATA\Final Peojek\UAS KOMDAT\KOMDAT\Debug\List\final.asm(1087): warning: Register r9 already defined by the .DEF directive
D:\1KULIAH\.SEMESTER 2\KOMUNIKASI DATA\Final Peojek\UAS KOMDAT\KOMDAT\Debug\List\final.asm(1088): warning: Register r8 already defined by the .DEF directive
D:\1KULIAH\.SEMESTER 2\KOMUNIKASI DATA\Final Peojek\UAS KOMDAT\KOMDAT\Debug\List\final.asm(1089): warning: Register r11 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.40 Advanced
                 ;(C) Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _count=R4
                 	.DEF _count_msb=R5
                 	.DEF _max_guest=R6
                 	.DEF _max_guest_msb=R7
                 	.DEF __lcd_x=R9
                 	.DEF __lcd_y=R8
                 	.DEF __lcd_maxx=R11
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00d9 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G102:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G102:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0000
000034 0028      	.DB  0x0,0x0,0x28,0x0
                 
                 _0x6:
000035 0100
000036 0302
000037 0504
000038 0706      	.DB  0x0,0x1,0x2,0x3,0x4,0x5,0x6,0x7
000039 0908
00003a 1110
00003b 1312
00003c 1514      	.DB  0x8,0x9,0x10,0x11,0x12,0x13,0x14,0x15
00003d 1716
00003e 1918
00003f 2120
000040 2322      	.DB  0x16,0x17,0x18,0x19,0x20,0x21,0x22,0x23
000041 2524
000042 2726
000043 2928
000044 3130      	.DB  0x24,0x25,0x26,0x27,0x28,0x29,0x30,0x31
000045 3332
000046 3534
000047 3736
000048 3938      	.DB  0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39
D:\1KULIAH\.SEMESTER 2\KOMUNIKASI DATA\Final Peojek\UAS KOMDAT\KOMDAT\Debug\List\final.asm(1136): warning: .cseg .db misalignment - padding zero byte
000049 0040      	.DB  0x40
                 _0x0:
00004a 6953
00004b 616c
00004c 6b68
00004d 6e61      	.DB  0x53,0x69,0x6C,0x61,0x68,0x6B,0x61,0x6E
00004e 5520
00004f 756b
000050 0072
000051 7553      	.DB  0x20,0x55,0x6B,0x75,0x72,0x0,0x53,0x75
000052 7568
000053 7420
000054 6275
000055 6875      	.DB  0x68,0x75,0x20,0x74,0x75,0x62,0x75,0x68
000056 756d
000057 0021
000058 6557
000059 636c      	.DB  0x6D,0x75,0x21,0x0,0x57,0x65,0x6C,0x63
00005a 6d6f
00005b 2c65
00005c 7320
00005d 6c69      	.DB  0x6F,0x6D,0x65,0x2C,0x20,0x73,0x69,0x6C
00005e 6861
00005f 002d
000060 616b
000061 206e      	.DB  0x61,0x68,0x2D,0x0,0x6B,0x61,0x6E,0x20
000062 616d
000063 7573
000064 206b
000065 203a      	.DB  0x6D,0x61,0x73,0x75,0x6B,0x20,0x3A,0x20
000066 0029
000067 614d
000068 6661
000069 6b20      	.DB  0x29,0x0,0x4D,0x61,0x61,0x66,0x20,0x6B
00006a 6d61
00006b 2075
00006c 6974
00006d 6164      	.DB  0x61,0x6D,0x75,0x20,0x74,0x69,0x64,0x61
00006e 006b
00006f 6964
000070 7a69
000071 6e69      	.DB  0x6B,0x0,0x64,0x69,0x69,0x7A,0x69,0x6E
000072 616b
000073 206e
000074 616d
000075 7573      	.DB  0x6B,0x61,0x6E,0x20,0x6D,0x61,0x73,0x75
000076 006b
000077 6843
000078 6365
000079 206b      	.DB  0x6B,0x0,0x43,0x68,0x65,0x63,0x6B,0x20
00007a 7075
00007b 6b20
00007c 2065
00007d 6c6b      	.DB  0x75,0x70,0x20,0x6B,0x65,0x20,0x6B,0x6C
00007e 2d69
00007f 6e00
000080 6b69
000081 7920      	.DB  0x69,0x2D,0x0,0x6E,0x69,0x6B,0x20,0x79
000082 6e61
000083 2067
000084 6574
000085 7372      	.DB  0x61,0x6E,0x67,0x20,0x74,0x65,0x72,0x73
000086 6465
000087 6169
000088 2500
000089 0064      	.DB  0x65,0x64,0x69,0x61,0x0,0x25,0x64,0x0
00008a 7553
00008b 7568
00008c 7420
00008d 6275      	.DB  0x53,0x75,0x68,0x75,0x20,0x74,0x75,0x62
00008e 6875
00008f 6b20
000090 6d61
000091 2075      	.DB  0x75,0x68,0x20,0x6B,0x61,0x6D,0x75,0x20
000092 4300
000093 5400
000094 6c65
000095 6861      	.DB  0x0,0x43,0x0,0x54,0x65,0x6C,0x61,0x68
000096 6d20
000097 6e65
000098 6163
000099 6170      	.DB  0x20,0x6D,0x65,0x6E,0x63,0x61,0x70,0x61
00009a 0069
00009b 6162
00009c 6174
00009d 2073      	.DB  0x69,0x0,0x62,0x61,0x74,0x61,0x73,0x20
00009e 616d
00009f 2178
D:\1KULIAH\.SEMESTER 2\KOMUNIKASI DATA\Final Peojek\UAS KOMDAT\KOMDAT\Debug\List\final.asm(1159): warning: .cseg .db misalignment - padding zero byte
0000a0 0000      	.DB  0x6D,0x61,0x78,0x21,0x0
                 _0x2000060:
D:\1KULIAH\.SEMESTER 2\KOMUNIKASI DATA\Final Peojek\UAS KOMDAT\KOMDAT\Debug\List\final.asm(1161): warning: .cseg .db misalignment - padding zero byte
0000a1 0001      	.DB  0x1
                 _0x2000000:
0000a2 4e2d
0000a3 4e41
0000a4 4900
0000a5 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\1KULIAH\.SEMESTER 2\KOMUNIKASI DATA\Final Peojek\UAS KOMDAT\KOMDAT\Debug\List\final.asm(1164): warning: .cseg .db misalignment - padding zero byte
0000a6 0000      	.DB  0x0
                 _0x2020003:
0000a7 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
0000a8 0004      	.DW  0x04
0000a9 0004      	.DW  0x04
0000aa 0066      	.DW  __REG_VARS*2
                 
0000ab 0029      	.DW  0x29
0000ac 0322      	.DW  _number
0000ad 006a      	.DW  _0x6*2
                 
0000ae 000e      	.DW  0x0E
0000af 0260      	.DW  _0xA
0000b0 0094      	.DW  _0x0*2
                 
0000b1 000e      	.DW  0x0E
0000b2 026e      	.DW  _0xA+14
0000b3 00a2      	.DW  _0x0*2+14
                 
0000b4 0010      	.DW  0x10
0000b5 027c      	.DW  _0xD
0000b6 00b0      	.DW  _0x0*2+28
                 
0000b7 000e      	.DW  0x0E
0000b8 028c      	.DW  _0xD+16
0000b9 00c0      	.DW  _0x0*2+44
                 
0000ba 0010      	.DW  0x10
0000bb 029a      	.DW  _0x10
0000bc 00ce      	.DW  _0x0*2+58
                 
0000bd 0010      	.DW  0x10
0000be 02aa      	.DW  _0x10+16
0000bf 00de      	.DW  _0x0*2+74
                 
0000c0 0011      	.DW  0x11
0000c1 02ba      	.DW  _0x10+32
0000c2 00ee      	.DW  _0x0*2+90
                 
0000c3 0012      	.DW  0x12
0000c4 02cb      	.DW  _0x10+49
0000c5 00ff      	.DW  _0x0*2+107
                 
0000c6 0011      	.DW  0x11
0000c7 02dd      	.DW  _0x13
0000c8 0114      	.DW  _0x0*2+128
                 
0000c9 0002      	.DW  0x02
0000ca 02ee      	.DW  _0x13+17
0000cb 0125      	.DW  _0x0*2+145
                 
0000cc 000f      	.DW  0x0F
0000cd 02f0      	.DW  _0x14
0000ce 0127      	.DW  _0x0*2+147
                 
0000cf 000b      	.DW  0x0B
0000d0 02ff      	.DW  _0x14+15
0000d1 0136      	.DW  _0x0*2+162
                 
0000d2 0001      	.DW  0x01
0000d3 034b      	.DW  __seed_G100
0000d4 0142      	.DW  _0x2000060*2
                 
0000d5 0002      	.DW  0x02
0000d6 034f      	.DW  __base_y_G101
0000d7 014e      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
0000d8 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0000d9 94f8      	CLI
0000da 27ee      	CLR  R30
0000db bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000dc e0f1      	LDI  R31,1
0000dd bffb      	OUT  GICR,R31
0000de bfeb      	OUT  GICR,R30
0000df bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0000e0 e08d      	LDI  R24,(14-2)+1
0000e1 e0a2      	LDI  R26,2
0000e2 27bb      	CLR  R27
                 __CLEAR_REG:
0000e3 93ed      	ST   X+,R30
0000e4 958a      	DEC  R24
0000e5 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000e6 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000e7 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000e8 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000e9 93ed      	ST   X+,R30
0000ea 9701      	SBIW R24,1
0000eb f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000ec e5e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000ed e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000ee 9185      	LPM  R24,Z+
0000ef 9195      	LPM  R25,Z+
0000f0 9700      	SBIW R24,0
0000f1 f061      	BREQ __GLOBAL_INI_END
0000f2 91a5      	LPM  R26,Z+
0000f3 91b5      	LPM  R27,Z+
0000f4 9005      	LPM  R0,Z+
0000f5 9015      	LPM  R1,Z+
0000f6 01bf      	MOVW R22,R30
0000f7 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000f8 9005      	LPM  R0,Z+
0000f9 920d      	ST   X+,R0
0000fa 9701      	SBIW R24,1
0000fb f7e1      	BRNE __GLOBAL_INI_LOOP
0000fc 01fb      	MOVW R30,R22
0000fd cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000fe e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000ff bfed      	OUT  SPL,R30
000100 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000101 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000102 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000103 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000104 940c 01d5 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 000B {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 000C ADMUX = adc_input | (ADC_VREF_TYPE & 0xff);
000106 931a      	ST   -Y,R17
000107 2f1a      	MOV  R17,R26
                 ;	adc_input -> R17
000108 2fe1      	MOV  R30,R17
000109 6ce0      	ORI  R30,LOW(0xC0)
00010a b9e7      	OUT  0x7,R30
                 ; 0000 000D 
                 ; 0000 000E delay_us(10);
                +
00010b e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00010c 958a     +DEC R24
00010d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 000F 
                 ; 0000 0010 ADCSRA |= 0x40;
00010e 9a36      	SBI  0x6,6
                 ; 0000 0011 while ((ADCSRA & 0x10) == 0);
                 _0x3:
00010f 9b34      	SBIS 0x6,4
000110 cffe      	RJMP _0x3
                 ; 0000 0012 ADCSRA |= 0x10;
000111 9a34      	SBI  0x6,4
                 ; 0000 0013 
                 ; 0000 0014 return ADCW;
000112 b1e4      	IN   R30,0x4
000113 b1f5      	IN   R31,0x4+1
000114 940c 02cb 	JMP  _0x20C0002
                 ; 0000 0015 }
                 ; .FEND
                 ;int count = 0, max_guest = 40;
                 ;float data, temperature;
                 ;char container[16];
                 ;char number[] =
                 ;0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x10, 0x11, 0x12, 0x ...
                 ;0x16, 0x17, 0x18, 0x19, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x ...
                 ;0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x40
                 ;};
                 
                 	.DSEG
                 ;void buzzer_beep(unsigned char times)
                 ; 0000 0022 {
                 
                 	.CSEG
                 _buzzer_beep:
                 ; .FSTART _buzzer_beep
                 ; 0000 0023 unsigned char i;
                 ; 0000 0024 for(i = 0; i < times; i++)
000116 931a      	ST   -Y,R17
000117 930a      	ST   -Y,R16
000118 2f0a      	MOV  R16,R26
                 ;	times -> R16
                 ;	i -> R17
000119 e010      	LDI  R17,LOW(0)
                 _0x8:
00011a 1710      	CP   R17,R16
00011b f440      	BRSH _0x9
                 ; 0000 0025 {
                 ; 0000 0026 PORTD |= (1 << BUZZER_PIN); // Hidupkan buzzer
00011c 9a97      	SBI  0x12,7
                 ; 0000 0027 delay_ms(100);              // Delay 100 ms
00011d 940e 0490 	CALL SUBOPT_0x0
                 ; 0000 0028 PORTD &= ~(1 << BUZZER_PIN);// Matikan buzzer
00011f 9897      	CBI  0x12,7
                 ; 0000 0029 delay_ms(100);              // Delay 100 ms
000120 940e 0490 	CALL SUBOPT_0x0
                 ; 0000 002A }
000122 5f1f      	SUBI R17,-1
000123 cff6      	RJMP _0x8
                 _0x9:
                 ; 0000 002B }
000124 9109      	LD   R16,Y+
000125 9119      	LD   R17,Y+
000126 9508      	RET
                 ; .FEND
                 ;void read_temperature()
                 ; 0000 002E {
                 _read_temperature:
                 ; .FSTART _read_temperature
                 ; 0000 002F data = read_adc(0);
000127 e0a0      	LDI  R26,LOW(0)
000128 dfdd      	RCALL _read_adc
000129 e0aa      	LDI  R26,LOW(_data)
00012a e0b3      	LDI  R27,HIGH(_data)
00012b 2766      	CLR  R22
00012c 2777      	CLR  R23
00012d 940e 0587 	CALL __CDF1
00012f 940e 050e 	CALL __PUTDP1
                 ; 0000 0030 }
000131 9508      	RET
                 ; .FEND
                 ;void calc_temperature()
                 ; 0000 0033 {
                 _calc_temperature:
                 ; .FSTART _calc_temperature
                 ; 0000 0034 temperature = data * (5.0 / 1024.0) * 100.0;
000132 91a0 030a 	LDS  R26,_data
000134 91b0 030b 	LDS  R27,_data+1
000136 9180 030c 	LDS  R24,_data+2
000138 9190 030d 	LDS  R25,_data+3
                +
00013a e0e0     +LDI R30 , LOW ( 0x3BA00000 )
00013b e0f0     +LDI R31 , HIGH ( 0x3BA00000 )
00013c ea60     +LDI R22 , BYTE3 ( 0x3BA00000 )
00013d e37b     +LDI R23 , BYTE4 ( 0x3BA00000 )
                 	__GETD1N 0x3BA00000
00013e 940e 05b4 	CALL __MULF12
                +
000140 e0a0     +LDI R26 , LOW ( 0x42C80000 )
000141 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
000142 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
000143 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
000144 940e 05b4 	CALL __MULF12
000146 93e0 030e 	STS  _temperature,R30
000148 93f0 030f 	STS  _temperature+1,R31
00014a 9360 0310 	STS  _temperature+2,R22
00014c 9370 0311 	STS  _temperature+3,R23
                 ; 0000 0035 }
00014e 9508      	RET
                 ; .FEND
                 ;void show_check()
                 ; 0000 0038 {
                 _show_check:
                 ; .FSTART _show_check
                 ; 0000 0039 lcd_clear();
00014f 940e 0494 	CALL SUBOPT_0x1
                 ; 0000 003A lcd_gotoxy(0, 0);
                 ; 0000 003B lcd_puts("Silahkan Ukur");
                +
000151 e6a0     +LDI R26 , LOW ( _0xA + ( 0 ) )
000152 e0b2     +LDI R27 , HIGH ( _0xA + ( 0 ) )
                 	__POINTW2MN _0xA,0
000153 940e 049b 	CALL SUBOPT_0x2
                 ; 0000 003C lcd_gotoxy(0, 1);
                 ; 0000 003D lcd_puts("Suhu tubuhmu!");
                +
000155 e6ae     +LDI R26 , LOW ( _0xA + ( 14 ) )
000156 e0b2     +LDI R27 , HIGH ( _0xA + ( 14 ) )
                 	__POINTW2MN _0xA,14
000157 c059      	RJMP _0x20C0004
                 ; 0000 003E }
                 ; .FEND
                 
                 	.DSEG
                 _0xA:
000260           	.BYTE 0x1C
                 ;void show_allow()
                 ; 0000 0041 {
                 
                 	.CSEG
                 _show_allow:
                 ; .FSTART _show_allow
                 ; 0000 0042 PORTA.4 = 1;
000158 9adc      	SBI  0x1B,4
                 ; 0000 0043 buzzer_beep(1); // Buzzer beep sekali untuk LED hijau
000159 e0a1      	LDI  R26,LOW(1)
00015a dfbb      	RCALL _buzzer_beep
                 ; 0000 0044 lcd_clear();
00015b 940e 0494 	CALL SUBOPT_0x1
                 ; 0000 0045 lcd_gotoxy(0, 0);
                 ; 0000 0046 lcd_puts("Welcome, silah-");
                +
00015d e7ac     +LDI R26 , LOW ( _0xD + ( 0 ) )
00015e e0b2     +LDI R27 , HIGH ( _0xD + ( 0 ) )
                 	__POINTW2MN _0xD,0
00015f 940e 049b 	CALL SUBOPT_0x2
                 ; 0000 0047 lcd_gotoxy(0, 1);
                 ; 0000 0048 lcd_puts("kan masuk : )");
                +
000161 e8ac     +LDI R26 , LOW ( _0xD + ( 16 ) )
000162 e0b2     +LDI R27 , HIGH ( _0xD + ( 16 ) )
                 	__POINTW2MN _0xD,16
000163 940e 04a2 	CALL SUBOPT_0x3
                 ; 0000 0049 delay_ms (1000);
                 ; 0000 004A }
000165 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0xD:
00027c           	.BYTE 0x1E
                 ;void show_disallow()
                 ; 0000 004D {
                 
                 	.CSEG
                 _show_disallow:
                 ; .FSTART _show_disallow
                 ; 0000 004E PORTA.5 = 1;
000166 9add      	SBI  0x1B,5
                 ; 0000 004F buzzer_beep(3); // Buzzer beep tiga kali untuk LED merah
000167 e0a3      	LDI  R26,LOW(3)
000168 dfad      	RCALL _buzzer_beep
                 ; 0000 0050 lcd_clear();
000169 940e 0494 	CALL SUBOPT_0x1
                 ; 0000 0051 lcd_gotoxy(0, 0);
                 ; 0000 0052 lcd_puts("Maaf kamu tidak");
                +
00016b e9aa     +LDI R26 , LOW ( _0x10 + ( 0 ) )
00016c e0b2     +LDI R27 , HIGH ( _0x10 + ( 0 ) )
                 	__POINTW2MN _0x10,0
00016d 940e 049b 	CALL SUBOPT_0x2
                 ; 0000 0053 lcd_gotoxy(0, 1);
                 ; 0000 0054 lcd_puts("diizinkan masuk");
                +
00016f eaaa     +LDI R26 , LOW ( _0x10 + ( 16 ) )
000170 e0b2     +LDI R27 , HIGH ( _0x10 + ( 16 ) )
                 	__POINTW2MN _0x10,16
000171 940e 04a2 	CALL SUBOPT_0x3
                 ; 0000 0055 delay_ms(1000);
                 ; 0000 0056 lcd_clear();
000173 940e 0494 	CALL SUBOPT_0x1
                 ; 0000 0057 lcd_gotoxy(0, 0);
                 ; 0000 0058 lcd_puts("Check up ke kli-");
                +
000175 ebaa     +LDI R26 , LOW ( _0x10 + ( 32 ) )
000176 e0b2     +LDI R27 , HIGH ( _0x10 + ( 32 ) )
                 	__POINTW2MN _0x10,32
000177 940e 049b 	CALL SUBOPT_0x2
                 ; 0000 0059 lcd_gotoxy(0, 1);
                 ; 0000 005A lcd_puts("nik yang tersedia");
                +
000179 ecab     +LDI R26 , LOW ( _0x10 + ( 49 ) )
00017a e0b2     +LDI R27 , HIGH ( _0x10 + ( 49 ) )
                 	__POINTW2MN _0x10,49
00017b 940e 04a2 	CALL SUBOPT_0x3
                 ; 0000 005B delay_ms(1000);
                 ; 0000 005C PORTA.5 = 0;
00017d 98dd      	CBI  0x1B,5
                 ; 0000 005D }
00017e 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x10:
00029a           	.BYTE 0x43
                 ;void show_body_temperature(float temp)
                 ; 0000 0060 {
                 
                 	.CSEG
                 _show_body_temperature:
                 ; .FSTART _show_body_temperature
                 ; 0000 0061 sprintf(container, "%d", (int)temp); // Konversi suhu menjadi string menggunakan ...
00017f 940e 051c 	CALL __PUTPARD2
                 ;	temp -> Y+0
000181 e1e2      	LDI  R30,LOW(_container)
000182 e0f3      	LDI  R31,HIGH(_container)
000183 93fa      	ST   -Y,R31
000184 93ea      	ST   -Y,R30
                +
000185 e1e1     +LDI R30 , LOW ( 2 * _0x0 + ( 125 ) )
000186 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 125 ) )
                 	__POINTW1FN _0x0,125
000187 93fa      	ST   -Y,R31
000188 93ea      	ST   -Y,R30
                +
000189 81ec     +LDD R30 , Y + 4
00018a 81fd     +LDD R31 , Y + 4 + 1
00018b 816e     +LDD R22 , Y + 4 + 2
00018c 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00018d 940e 0550 	CALL __CFD1
00018f 940e 0505 	CALL __CWD1
000191 940e 0517 	CALL __PUTPARD1
000193 e084      	LDI  R24,4
000194 940e 0441 	CALL _sprintf
000196 9628      	ADIW R28,8
                 ; 0000 0062 lcd_clear();
000197 940e 0494 	CALL SUBOPT_0x1
                 ; 0000 0063 lcd_gotoxy(0, 0);
                 ; 0000 0064 lcd_puts("Suhu tubuh kamu ");
                +
000199 edad     +LDI R26 , LOW ( _0x13 + ( 0 ) )
00019a e0b2     +LDI R27 , HIGH ( _0x13 + ( 0 ) )
                 	__POINTW2MN _0x13,0
00019b 940e 049b 	CALL SUBOPT_0x2
                 ; 0000 0065 lcd_gotoxy(0, 1);
                 ; 0000 0066 lcd_puts(container);
00019d e1a2      	LDI  R26,LOW(_container)
00019e e0b3      	LDI  R27,HIGH(_container)
00019f 940e 028d 	CALL _lcd_puts
                 ; 0000 0067 lcd_putchar(0xdf);
0001a1 edaf      	LDI  R26,LOW(223)
0001a2 940e 0279 	CALL _lcd_putchar
                 ; 0000 0068 lcd_puts("C");
                +
0001a4 eeae     +LDI R26 , LOW ( _0x13 + ( 17 ) )
0001a5 e0b2     +LDI R27 , HIGH ( _0x13 + ( 17 ) )
                 	__POINTW2MN _0x13,17
0001a6 940e 028d 	CALL _lcd_puts
                 ; 0000 0069 }
0001a8 c0f3      	RJMP _0x20C0003
                 ; .FEND
                 
                 	.DSEG
                 _0x13:
0002dd           	.BYTE 0x13
                 ;void show_limit_reached()
                 ; 0000 006C {
                 
                 	.CSEG
                 _show_limit_reached:
                 ; .FSTART _show_limit_reached
                 ; 0000 006D lcd_clear();
0001a9 940e 0494 	CALL SUBOPT_0x1
                 ; 0000 006E lcd_gotoxy(0, 0);
                 ; 0000 006F lcd_puts("Telah mencapai");
                +
0001ab efa0     +LDI R26 , LOW ( _0x14 + ( 0 ) )
0001ac e0b2     +LDI R27 , HIGH ( _0x14 + ( 0 ) )
                 	__POINTW2MN _0x14,0
0001ad 940e 049b 	CALL SUBOPT_0x2
                 ; 0000 0070 lcd_gotoxy(0, 1);
                 ; 0000 0071 lcd_puts("batas max!");
                +
0001af efaf     +LDI R26 , LOW ( _0x14 + ( 15 ) )
0001b0 e0b2     +LDI R27 , HIGH ( _0x14 + ( 15 ) )
                 	__POINTW2MN _0x14,15
                 _0x20C0004:
0001b1 940e 028d 	CALL _lcd_puts
                 ; 0000 0072 }
0001b3 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x14:
0002f0           	.BYTE 0x1A
                 ;void show_total_guest()
                 ; 0000 0075 {
                 
                 	.CSEG
                 _show_total_guest:
                 ; .FSTART _show_total_guest
                 ; 0000 0076 PORTB = number[count];
0001b4 940e 04a8 	CALL SUBOPT_0x4
                 ; 0000 0077 }
0001b6 9508      	RET
                 ; .FEND
                 ;void motor_on_off()
                 ; 0000 007A {
                 _motor_on_off:
                 ; .FSTART _motor_on_off
                 ; 0000 007B PORTA.3 = 1;
0001b7 9adb      	SBI  0x1B,3
                 ; 0000 007C delay_ms(300);
0001b8 e2ac      	LDI  R26,LOW(300)
0001b9 e0b1      	LDI  R27,HIGH(300)
0001ba 940e 0622 	CALL _delay_ms
                 ; 0000 007D PORTA.3 = 0;
0001bc 98db      	CBI  0x1B,3
                 ; 0000 007E }
0001bd 9508      	RET
                 ; .FEND
                 ;void reset_device()
                 ; 0000 0081 {
                 _reset_device:
                 ; .FSTART _reset_device
                 ; 0000 0082 count = 0;
0001be 2444      	CLR  R4
0001bf 2455      	CLR  R5
                 ; 0000 0083 data = 0.0;
0001c0 e0e0      	LDI  R30,LOW(0)
0001c1 93e0 030a 	STS  _data,R30
0001c3 93e0 030b 	STS  _data+1,R30
0001c5 93e0 030c 	STS  _data+2,R30
0001c7 93e0 030d 	STS  _data+3,R30
                 ; 0000 0084 temperature = 0.0;
0001c9 93e0 030e 	STS  _temperature,R30
0001cb 93e0 030f 	STS  _temperature+1,R30
0001cd 93e0 0310 	STS  _temperature+2,R30
0001cf 93e0 0311 	STS  _temperature+3,R30
                 ; 0000 0085 PORTB = number[count];
0001d1 940e 04a8 	CALL SUBOPT_0x4
                 ; 0000 0086 show_check();
0001d3 df7b      	RCALL _show_check
                 ; 0000 0087 }
0001d4 9508      	RET
                 ; .FEND
                 ;void main(void)
                 ; 0000 008A {
                 _main:
                 ; .FSTART _main
                 ; 0000 008B PORTA = 0b00000110;
0001d5 e0e6      	LDI  R30,LOW(6)
0001d6 bbeb      	OUT  0x1B,R30
                 ; 0000 008C DDRA = 0b00111000; // Konfigurasi PA4 dan PA5 sebagai output, PA1 dan PA2 sebaga ...
0001d7 e3e8      	LDI  R30,LOW(56)
0001d8 bbea      	OUT  0x1A,R30
                 ; 0000 008D 
                 ; 0000 008E PORTB = 0x00;
0001d9 e0e0      	LDI  R30,LOW(0)
0001da bbe8      	OUT  0x18,R30
                 ; 0000 008F DDRB = 0xff;
0001db efef      	LDI  R30,LOW(255)
0001dc bbe7      	OUT  0x17,R30
                 ; 0000 0090 
                 ; 0000 0091 PORTC = 0x00;
0001dd e0e0      	LDI  R30,LOW(0)
0001de bbe5      	OUT  0x15,R30
                 ; 0000 0092 DDRC = 0xff;
0001df efef      	LDI  R30,LOW(255)
0001e0 bbe4      	OUT  0x14,R30
                 ; 0000 0093 
                 ; 0000 0094 PORTD = 0x00;
0001e1 e0e0      	LDI  R30,LOW(0)
0001e2 bbe2      	OUT  0x12,R30
                 ; 0000 0095 DDRD = 0x80; // PD7 sebagai output
0001e3 e8e0      	LDI  R30,LOW(128)
0001e4 bbe1      	OUT  0x11,R30
                 ; 0000 0096 
                 ; 0000 0097 TCCR0 = 0x00;
0001e5 e0e0      	LDI  R30,LOW(0)
0001e6 bfe3      	OUT  0x33,R30
                 ; 0000 0098 TCNT0 = 0x00;
0001e7 bfe2      	OUT  0x32,R30
                 ; 0000 0099 OCR0 = 0x00;
0001e8 bfec      	OUT  0x3C,R30
                 ; 0000 009A 
                 ; 0000 009B TCCR1A = 0x00;
0001e9 bdef      	OUT  0x2F,R30
                 ; 0000 009C TCCR1B = 0x00;
0001ea bdee      	OUT  0x2E,R30
                 ; 0000 009D TCNT1H = 0x00;
0001eb bded      	OUT  0x2D,R30
                 ; 0000 009E TCNT1L = 0x00;
0001ec bdec      	OUT  0x2C,R30
                 ; 0000 009F ICR1H = 0x00;
0001ed bde7      	OUT  0x27,R30
                 ; 0000 00A0 ICR1L = 0x00;
0001ee bde6      	OUT  0x26,R30
                 ; 0000 00A1 OCR1AH = 0x00;
0001ef bdeb      	OUT  0x2B,R30
                 ; 0000 00A2 OCR1AL = 0x00;
0001f0 bdea      	OUT  0x2A,R30
                 ; 0000 00A3 OCR1BH = 0x00;
0001f1 bde9      	OUT  0x29,R30
                 ; 0000 00A4 OCR1BL = 0x00;
0001f2 bde8      	OUT  0x28,R30
                 ; 0000 00A5 
                 ; 0000 00A6 ASSR = 0x00;
0001f3 bde2      	OUT  0x22,R30
                 ; 0000 00A7 TCCR2 = 0x00;
0001f4 bde5      	OUT  0x25,R30
                 ; 0000 00A8 TCNT2 = 0x00;
0001f5 bde4      	OUT  0x24,R30
                 ; 0000 00A9 OCR2 = 0x00;
0001f6 bde3      	OUT  0x23,R30
                 ; 0000 00AA 
                 ; 0000 00AB MCUCR = 0x00;
0001f7 bfe5      	OUT  0x35,R30
                 ; 0000 00AC MCUCSR = 0x00;
0001f8 bfe4      	OUT  0x34,R30
                 ; 0000 00AD 
                 ; 0000 00AE TIMSK = 0x00;
0001f9 bfe9      	OUT  0x39,R30
                 ; 0000 00AF 
                 ; 0000 00B0 UCSRB = 0x00;
0001fa b9ea      	OUT  0xA,R30
                 ; 0000 00B1 
                 ; 0000 00B2 ACSR = 0x00;
0001fb b9e8      	OUT  0x8,R30
                 ; 0000 00B3 SFIOR = 0x00;
0001fc bfe0      	OUT  0x30,R30
                 ; 0000 00B4 
                 ; 0000 00B5 ADMUX = ADC_VREF_TYPE & 0xff;
0001fd ece0      	LDI  R30,LOW(192)
0001fe b9e7      	OUT  0x7,R30
                 ; 0000 00B6 ADCSRA = 0x84;
0001ff e8e4      	LDI  R30,LOW(132)
000200 b9e6      	OUT  0x6,R30
                 ; 0000 00B7 
                 ; 0000 00B8 SPCR = 0x00;
000201 e0e0      	LDI  R30,LOW(0)
000202 b9ed      	OUT  0xD,R30
                 ; 0000 00B9 
                 ; 0000 00BA TWCR = 0x00;
000203 bfe6      	OUT  0x36,R30
                 ; 0000 00BB 
                 ; 0000 00BC lcd_init(16);
000204 e1a0      	LDI  R26,LOW(16)
000205 940e 029e 	CALL _lcd_init
                 ; 0000 00BD 
                 ; 0000 00BE while (1)
                 _0x19:
                 ; 0000 00BF {
                 ; 0000 00C0 if (PINA.1 == 0)
000207 9bc9      	SBIS 0x19,1
                 ; 0000 00C1 reset_device();
000208 dfb5      	RCALL _reset_device
                 ; 0000 00C2 
                 ; 0000 00C3 if (PINA.2 == 0)
000209 99ca      	SBIC 0x19,2
00020a c02c      	RJMP _0x1D
                 ; 0000 00C4 {
                 ; 0000 00C5 read_temperature();
00020b df1b      	RCALL _read_temperature
                 ; 0000 00C6 calc_temperature();
00020c df25      	RCALL _calc_temperature
                 ; 0000 00C7 show_check();
00020d df41      	RCALL _show_check
                 ; 0000 00C8 
                 ; 0000 00C9 if (count == max_guest)
                +
00020e 1464     +CP R6 , R4
00020f 0475     +CPC R7 , R5
                 	__CPWRR 6,7,4,5
000210 f411      	BRNE _0x1E
                 ; 0000 00CA show_limit_reached();
000211 df97      	RCALL _show_limit_reached
                 ; 0000 00CB else
000212 c024      	RJMP _0x1F
                 _0x1E:
                 ; 0000 00CC {
                 ; 0000 00CD show_body_temperature(temperature);
000213 940e 04af 	CALL SUBOPT_0x5
000215 df69      	RCALL _show_body_temperature
                 ; 0000 00CE delay_ms(2000);
000216 eda0      	LDI  R26,LOW(2000)
000217 e0b7      	LDI  R27,HIGH(2000)
000218 940e 0622 	CALL _delay_ms
                 ; 0000 00CF if (temperature <= 38)
00021a 940e 04af 	CALL SUBOPT_0x5
                +
00021c e0e0     +LDI R30 , LOW ( 0x42180000 )
00021d e0f0     +LDI R31 , HIGH ( 0x42180000 )
00021e e168     +LDI R22 , BYTE3 ( 0x42180000 )
00021f e472     +LDI R23 , BYTE4 ( 0x42180000 )
                 	__GETD1N 0x42180000
000220 940e 0602 	CALL __CMPF12
000222 f011      	BREQ PC+3
000223 f008      	BRCS PC+2
000224 c010      	RJMP _0x20
                 ; 0000 00D0 {
                 ; 0000 00D1 count++;
000225 01f2      	MOVW R30,R4
000226 9631      	ADIW R30,1
000227 012f      	MOVW R4,R30
                 ; 0000 00D2 show_allow();
000228 df2f      	RCALL _show_allow
                 ; 0000 00D3 show_total_guest();
000229 df8a      	RCALL _show_total_guest
                 ; 0000 00D4 motor_on_off();
00022a df8c      	RCALL _motor_on_off
                 ; 0000 00D5 PORTA.4 = 0;
00022b 98dc      	CBI  0x1B,4
                 ; 0000 00D6 delay_ms(100);
00022c 940e 0490 	CALL SUBOPT_0x0
                 ; 0000 00D7 if (count == max_guest)
                +
00022e 1464     +CP R6 , R4
00022f 0475     +CPC R7 , R5
                 	__CPWRR 6,7,4,5
000230 f411      	BRNE _0x23
                 ; 0000 00D8 show_limit_reached();
000231 df77      	RCALL _show_limit_reached
                 ; 0000 00D9 else
000232 c001      	RJMP _0x24
                 _0x23:
                 ; 0000 00DA show_check();
000233 df1b      	RCALL _show_check
                 ; 0000 00DB }
                 _0x24:
                 ; 0000 00DC else
000234 c002      	RJMP _0x25
                 _0x20:
                 ; 0000 00DD {
                 ; 0000 00DE show_disallow();
000235 df30      	RCALL _show_disallow
                 ; 0000 00DF show_check();
000236 df18      	RCALL _show_check
                 ; 0000 00E0 }
                 _0x25:
                 ; 0000 00E1 }
                 _0x1F:
                 ; 0000 00E2 }
                 ; 0000 00E3 }
                 _0x1D:
000237 cfcf      	RJMP _0x19
                 ; 0000 00E4 }
                 _0x26:
000238 cfff      	RJMP _0x26
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
000239 931a      	ST   -Y,R17
00023a 2f1a      	MOV  R17,R26
00023b b3e5      	IN   R30,0x15
00023c 70ef      	ANDI R30,LOW(0xF)
00023d 2fae      	MOV  R26,R30
00023e 2fe1      	MOV  R30,R17
00023f 7fe0      	ANDI R30,LOW(0xF0)
000240 2bea      	OR   R30,R26
000241 bbe5      	OUT  0x15,R30
                +
000242 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000243 958a     +DEC R24
000244 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000245 9aaa      	SBI  0x15,2
                +
000246 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000247 958a     +DEC R24
000248 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000249 98aa      	CBI  0x15,2
                +
00024a e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00024b 958a     +DEC R24
00024c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00024d c07d      	RJMP _0x20C0002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00024e 93aa      	ST   -Y,R26
00024f 81a8      	LD   R26,Y
000250 dfe8      	RCALL __lcd_write_nibble_G101
000251 81e8          ld    r30,y
000252 95e2          swap  r30
000253 83e8          st    y,r30
000254 81a8      	LD   R26,Y
000255 dfe3      	RCALL __lcd_write_nibble_G101
                +
000256 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000257 958a     +DEC R24
000258 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000259 9621      	ADIW R28,1
00025a 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00025b 931a      	ST   -Y,R17
00025c 930a      	ST   -Y,R16
00025d 2f1a      	MOV  R17,R26
00025e 810a      	LDD  R16,Y+2
00025f 2fe1      	MOV  R30,R17
000260 e0f0      	LDI  R31,0
000261 5be1      	SUBI R30,LOW(-__base_y_G101)
000262 4ffc      	SBCI R31,HIGH(-__base_y_G101)
000263 81e0      	LD   R30,Z
000264 0fe0      	ADD  R30,R16
000265 2fae      	MOV  R26,R30
000266 dfe7      	RCALL __lcd_write_data
000267 2e90      	MOV  R9,R16
000268 2e81      	MOV  R8,R17
000269 8119      	LDD  R17,Y+1
00026a 8108      	LDD  R16,Y+0
00026b 9623      	ADIW R28,3
00026c 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00026d e0a2      	LDI  R26,LOW(2)
00026e 940e 04b8 	CALL SUBOPT_0x6
000270 e0ac      	LDI  R26,LOW(12)
000271 dfdc      	RCALL __lcd_write_data
000272 e0a1      	LDI  R26,LOW(1)
000273 940e 04b8 	CALL SUBOPT_0x6
000275 e0e0      	LDI  R30,LOW(0)
000276 2e8e      	MOV  R8,R30
000277 2e9e      	MOV  R9,R30
000278 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000279 931a      	ST   -Y,R17
00027a 2f1a      	MOV  R17,R26
00027b 301a      	CPI  R17,10
00027c f011      	BREQ _0x2020005
00027d 149b      	CP   R9,R11
00027e f040      	BRLO _0x2020004
                 _0x2020005:
00027f e0e0      	LDI  R30,LOW(0)
000280 93ea      	ST   -Y,R30
000281 9483      	INC  R8
000282 2da8      	MOV  R26,R8
000283 dfd7      	RCALL _lcd_gotoxy
000284 301a      	CPI  R17,10
000285 f409      	BRNE _0x2020007
000286 c044      	RJMP _0x20C0002
                 _0x2020007:
                 _0x2020004:
000287 9493      	INC  R9
000288 9aa8      	SBI  0x15,0
000289 2fa1      	MOV  R26,R17
00028a dfc3      	RCALL __lcd_write_data
00028b 98a8      	CBI  0x15,0
00028c c03e      	RJMP _0x20C0002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00028d 940e 04e5 	CALL __SAVELOCR4
00028f 019d      	MOVW R18,R26
                 _0x2020008:
000290 01d9      	MOVW R26,R18
                +
000291 5f2f     +SUBI R18 , LOW ( - 1 )
000292 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000293 91ec      	LD   R30,X
000294 2f1e      	MOV  R17,R30
000295 30e0      	CPI  R30,0
000296 f019      	BREQ _0x202000A
000297 2fa1      	MOV  R26,R17
000298 dfe0      	RCALL _lcd_putchar
000299 cff6      	RJMP _0x2020008
                 _0x202000A:
00029a 940e 04ec 	CALL __LOADLOCR4
                 _0x20C0003:
00029c 9624      	ADIW R28,4
00029d 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00029e 931a      	ST   -Y,R17
00029f 2f1a      	MOV  R17,R26
0002a0 b3e4      	IN   R30,0x14
0002a1 6fe0      	ORI  R30,LOW(0xF0)
0002a2 bbe4      	OUT  0x14,R30
0002a3 9aa2      	SBI  0x14,2
0002a4 9aa0      	SBI  0x14,0
0002a5 9aa1      	SBI  0x14,1
0002a6 98aa      	CBI  0x15,2
0002a7 98a8      	CBI  0x15,0
0002a8 98a9      	CBI  0x15,1
0002a9 2eb1      	MOV  R11,R17
0002aa 2fe1      	MOV  R30,R17
0002ab 58e0      	SUBI R30,-LOW(128)
                +
0002ac 93e0 0351+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0002ae 2fe1      	MOV  R30,R17
0002af 54e0      	SUBI R30,-LOW(192)
                +
0002b0 93e0 0352+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0002b2 e1a4      	LDI  R26,LOW(20)
0002b3 e0b0      	LDI  R27,0
0002b4 940e 0622 	CALL _delay_ms
0002b6 940e 04be 	CALL SUBOPT_0x7
0002b8 940e 04be 	CALL SUBOPT_0x7
0002ba 940e 04be 	CALL SUBOPT_0x7
0002bc e2a0      	LDI  R26,LOW(32)
0002bd df7b      	RCALL __lcd_write_nibble_G101
                +
0002be ec88     +LDI R24 , LOW ( 200 )
0002bf e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002c0 9701     +SBIW R24 , 1
0002c1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002c2 e2a8      	LDI  R26,LOW(40)
0002c3 df8a      	RCALL __lcd_write_data
0002c4 e0a4      	LDI  R26,LOW(4)
0002c5 df88      	RCALL __lcd_write_data
0002c6 e8a5      	LDI  R26,LOW(133)
0002c7 df86      	RCALL __lcd_write_data
0002c8 e0a6      	LDI  R26,LOW(6)
0002c9 df84      	RCALL __lcd_write_data
0002ca dfa2      	RCALL _lcd_clear
                 _0x20C0002:
0002cb 9119      	LD   R17,Y+
0002cc 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G102:
                 ; .FSTART _put_buff_G102
0002cd 940e 04e3 	CALL __SAVELOCR6
0002cf 019d      	MOVW R18,R26
0002d0 815e      	LDD  R21,Y+6
0002d1 9612      	ADIW R26,2
0002d2 940e 050a 	CALL __GETW1P
0002d4 9730      	SBIW R30,0
0002d5 f131      	BREQ _0x2040010
0002d6 01d9      	MOVW R26,R18
0002d7 9614      	ADIW R26,4
0002d8 940e 050a 	CALL __GETW1P
0002da 018f      	MOVW R16,R30
0002db 9730      	SBIW R30,0
0002dc f059      	BREQ _0x2040012
                +
0002dd 3002     +CPI R16 , LOW ( 2 )
0002de e0e0     +LDI R30 , HIGH ( 2 )
0002df 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0002e0 f080      	BRLO _0x2040013
0002e1 01f8      	MOVW R30,R16
0002e2 9731      	SBIW R30,1
0002e3 018f      	MOVW R16,R30
                +
0002e4 01d9     +MOVW R26 , R18
0002e5 9614     +ADIW R26 , 4
0002e6 93ed     +ST X + , R30
0002e7 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2040012:
0002e8 01d9      	MOVW R26,R18
0002e9 9612      	ADIW R26,2
0002ea 91ed      	LD   R30,X+
0002eb 91fd      	LD   R31,X+
0002ec 9631      	ADIW R30,1
0002ed 93fe      	ST   -X,R31
0002ee 93ee      	ST   -X,R30
0002ef 9731      	SBIW R30,1
0002f0 8350      	ST   Z,R21
                 _0x2040013:
0002f1 01d9      	MOVW R26,R18
0002f2 940e 050a 	CALL __GETW1P
0002f4 23ff      	TST  R31
0002f5 f02a      	BRMI _0x2040014
0002f6 91ed      	LD   R30,X+
0002f7 91fd      	LD   R31,X+
0002f8 9631      	ADIW R30,1
0002f9 93fe      	ST   -X,R31
0002fa 93ee      	ST   -X,R30
                 _0x2040014:
0002fb c005      	RJMP _0x2040015
                 _0x2040010:
0002fc 01d9      	MOVW R26,R18
0002fd efef      	LDI  R30,LOW(65535)
0002fe efff      	LDI  R31,HIGH(65535)
0002ff 93ed      	ST   X+,R30
000300 93fc      	ST   X,R31
                 _0x2040015:
000301 940e 04ea 	CALL __LOADLOCR6
000303 9627      	ADIW R28,7
000304 9508      	RET
                 ; .FEND
                 __print_G102:
                 ; .FSTART __print_G102
000305 93ba      	ST   -Y,R27
000306 93aa      	ST   -Y,R26
000307 9726      	SBIW R28,6
000308 940e 04e3 	CALL __SAVELOCR6
00030a e010      	LDI  R17,0
00030b 85ac      	LDD  R26,Y+12
00030c 85bd      	LDD  R27,Y+12+1
00030d e0e0      	LDI  R30,LOW(0)
00030e e0f0      	LDI  R31,HIGH(0)
00030f 93ed      	ST   X+,R30
000310 93fc      	ST   X,R31
                 _0x2040016:
000311 89ea      	LDD  R30,Y+18
000312 89fb      	LDD  R31,Y+18+1
000313 9631      	ADIW R30,1
000314 8bea      	STD  Y+18,R30
000315 8bfb      	STD  Y+18+1,R31
000316 9731      	SBIW R30,1
000317 91e4      	LPM  R30,Z
000318 2f2e      	MOV  R18,R30
000319 30e0      	CPI  R30,0
00031a f409      	BRNE PC+2
00031b c11d      	RJMP _0x2040018
00031c 2fe1      	MOV  R30,R17
00031d 30e0      	CPI  R30,0
00031e f439      	BRNE _0x204001C
00031f 3225      	CPI  R18,37
000320 f411      	BRNE _0x204001D
000321 e011      	LDI  R17,LOW(1)
000322 c002      	RJMP _0x204001E
                 _0x204001D:
000323 940e 04c6 	CALL SUBOPT_0x8
                 _0x204001E:
000325 c112      	RJMP _0x204001B
                 _0x204001C:
000326 30e1      	CPI  R30,LOW(0x1)
000327 f4a9      	BRNE _0x204001F
000328 3225      	CPI  R18,37
000329 f419      	BRNE _0x2040020
00032a 940e 04c6 	CALL SUBOPT_0x8
00032c c10a      	RJMP _0x20400CC
                 _0x2040020:
00032d e012      	LDI  R17,LOW(2)
00032e e040      	LDI  R20,LOW(0)
00032f e000      	LDI  R16,LOW(0)
000330 322d      	CPI  R18,45
000331 f411      	BRNE _0x2040021
000332 e001      	LDI  R16,LOW(1)
000333 c104      	RJMP _0x204001B
                 _0x2040021:
000334 322b      	CPI  R18,43
000335 f411      	BRNE _0x2040022
000336 e24b      	LDI  R20,LOW(43)
000337 c100      	RJMP _0x204001B
                 _0x2040022:
000338 3220      	CPI  R18,32
000339 f411      	BRNE _0x2040023
00033a e240      	LDI  R20,LOW(32)
00033b c0fc      	RJMP _0x204001B
                 _0x2040023:
00033c c002      	RJMP _0x2040024
                 _0x204001F:
00033d 30e2      	CPI  R30,LOW(0x2)
00033e f439      	BRNE _0x2040025
                 _0x2040024:
00033f e050      	LDI  R21,LOW(0)
000340 e013      	LDI  R17,LOW(3)
000341 3320      	CPI  R18,48
000342 f411      	BRNE _0x2040026
000343 6800      	ORI  R16,LOW(128)
000344 c0f3      	RJMP _0x204001B
                 _0x2040026:
000345 c003      	RJMP _0x2040027
                 _0x2040025:
000346 30e3      	CPI  R30,LOW(0x3)
000347 f009      	BREQ PC+2
000348 c0ef      	RJMP _0x204001B
                 _0x2040027:
000349 3320      	CPI  R18,48
00034a f010      	BRLO _0x204002A
00034b 332a      	CPI  R18,58
00034c f008      	BRLO _0x204002B
                 _0x204002A:
00034d c007      	RJMP _0x2040029
                 _0x204002B:
00034e e0aa      	LDI  R26,LOW(10)
00034f 9f5a      	MUL  R21,R26
000350 2d50      	MOV  R21,R0
000351 2fe2      	MOV  R30,R18
000352 53e0      	SUBI R30,LOW(48)
000353 0f5e      	ADD  R21,R30
000354 c0e3      	RJMP _0x204001B
                 _0x2040029:
000355 2fe2      	MOV  R30,R18
000356 36e3      	CPI  R30,LOW(0x63)
000357 f449      	BRNE _0x204002F
000358 940e 04cd 	CALL SUBOPT_0x9
00035a 89e8      	LDD  R30,Y+16
00035b 89f9      	LDD  R31,Y+16+1
00035c 81a4      	LDD  R26,Z+4
00035d 93aa      	ST   -Y,R26
00035e 940e 04d3 	CALL SUBOPT_0xA
000360 c0d6      	RJMP _0x2040030
                 _0x204002F:
000361 37e3      	CPI  R30,LOW(0x73)
000362 f441      	BRNE _0x2040032
000363 940e 04cd 	CALL SUBOPT_0x9
000365 940e 04d9 	CALL SUBOPT_0xB
000367 940e 0477 	CALL _strlen
000369 2f1e      	MOV  R17,R30
00036a c00a      	RJMP _0x2040033
                 _0x2040032:
00036b 37e0      	CPI  R30,LOW(0x70)
00036c f461      	BRNE _0x2040035
00036d 940e 04cd 	CALL SUBOPT_0x9
00036f 940e 04d9 	CALL SUBOPT_0xB
000371 940e 0483 	CALL _strlenf
000373 2f1e      	MOV  R17,R30
000374 6008      	ORI  R16,LOW(8)
                 _0x2040033:
000375 6002      	ORI  R16,LOW(2)
000376 770f      	ANDI R16,LOW(127)
000377 e030      	LDI  R19,LOW(0)
000378 c03c      	RJMP _0x2040036
                 _0x2040035:
000379 36e4      	CPI  R30,LOW(0x64)
00037a f011      	BREQ _0x2040039
00037b 36e9      	CPI  R30,LOW(0x69)
00037c f411      	BRNE _0x204003A
                 _0x2040039:
00037d 6004      	ORI  R16,LOW(4)
00037e c002      	RJMP _0x204003B
                 _0x204003A:
00037f 37e5      	CPI  R30,LOW(0x75)
000380 f431      	BRNE _0x204003C
                 _0x204003B:
000381 e5e4      	LDI  R30,LOW(_tbl10_G102*2)
000382 e0f0      	LDI  R31,HIGH(_tbl10_G102*2)
000383 83ee      	STD  Y+6,R30
000384 83ff      	STD  Y+6+1,R31
000385 e015      	LDI  R17,LOW(5)
000386 c00c      	RJMP _0x204003D
                 _0x204003C:
000387 35e8      	CPI  R30,LOW(0x58)
000388 f411      	BRNE _0x204003F
000389 6008      	ORI  R16,LOW(8)
00038a c003      	RJMP _0x2040040
                 _0x204003F:
00038b 37e8      	CPI  R30,LOW(0x78)
00038c f009      	BREQ PC+2
00038d c0a9      	RJMP _0x2040071
                 _0x2040040:
00038e e5ee      	LDI  R30,LOW(_tbl16_G102*2)
00038f e0f0      	LDI  R31,HIGH(_tbl16_G102*2)
000390 83ee      	STD  Y+6,R30
000391 83ff      	STD  Y+6+1,R31
000392 e014      	LDI  R17,LOW(4)
                 _0x204003D:
000393 ff02      	SBRS R16,2
000394 c017      	RJMP _0x2040042
000395 940e 04cd 	CALL SUBOPT_0x9
000397 89a8      	LDD  R26,Y+16
000398 89b9      	LDD  R27,Y+16+1
000399 9614      	ADIW R26,4
00039a 91ed      	LD   R30,X+
00039b 91fd      	LD   R31,X+
00039c 87ea      	STD  Y+10,R30
00039d 87fb      	STD  Y+10+1,R31
00039e 85ab      	LDD  R26,Y+11
00039f 23aa      	TST  R26
0003a0 f42a      	BRPL _0x2040043
0003a1 940e 04f9 	CALL __ANEGW1
0003a3 87ea      	STD  Y+10,R30
0003a4 87fb      	STD  Y+10+1,R31
0003a5 e24d      	LDI  R20,LOW(45)
                 _0x2040043:
0003a6 3040      	CPI  R20,0
0003a7 f011      	BREQ _0x2040044
0003a8 5f1f      	SUBI R17,-LOW(1)
0003a9 c001      	RJMP _0x2040045
                 _0x2040044:
0003aa 7f0b      	ANDI R16,LOW(251)
                 _0x2040045:
0003ab c009      	RJMP _0x2040046
                 _0x2040042:
0003ac 940e 04cd 	CALL SUBOPT_0x9
0003ae 89a8      	LDD  R26,Y+16
0003af 89b9      	LDD  R27,Y+16+1
0003b0 9614      	ADIW R26,4
0003b1 940e 050a 	CALL __GETW1P
0003b3 87ea      	STD  Y+10,R30
0003b4 87fb      	STD  Y+10+1,R31
                 _0x2040046:
                 _0x2040036:
0003b5 fd00      	SBRC R16,0
0003b6 c011      	RJMP _0x2040047
                 _0x2040048:
0003b7 1715      	CP   R17,R21
0003b8 f478      	BRSH _0x204004A
0003b9 ff07      	SBRS R16,7
0003ba c008      	RJMP _0x204004B
0003bb ff02      	SBRS R16,2
0003bc c004      	RJMP _0x204004C
0003bd 7f0b      	ANDI R16,LOW(251)
0003be 2f24      	MOV  R18,R20
0003bf 5011      	SUBI R17,LOW(1)
0003c0 c001      	RJMP _0x204004D
                 _0x204004C:
0003c1 e320      	LDI  R18,LOW(48)
                 _0x204004D:
0003c2 c001      	RJMP _0x204004E
                 _0x204004B:
0003c3 e220      	LDI  R18,LOW(32)
                 _0x204004E:
0003c4 940e 04c6 	CALL SUBOPT_0x8
0003c6 5051      	SUBI R21,LOW(1)
0003c7 cfef      	RJMP _0x2040048
                 _0x204004A:
                 _0x2040047:
0003c8 2f31      	MOV  R19,R17
0003c9 ff01      	SBRS R16,1
0003ca c017      	RJMP _0x204004F
                 _0x2040050:
0003cb 3030      	CPI  R19,0
0003cc f0a1      	BREQ _0x2040052
0003cd ff03      	SBRS R16,3
0003ce c006      	RJMP _0x2040053
0003cf 81ee      	LDD  R30,Y+6
0003d0 81ff      	LDD  R31,Y+6+1
0003d1 9125      	LPM  R18,Z+
0003d2 83ee      	STD  Y+6,R30
0003d3 83ff      	STD  Y+6+1,R31
0003d4 c005      	RJMP _0x2040054
                 _0x2040053:
0003d5 81ae      	LDD  R26,Y+6
0003d6 81bf      	LDD  R27,Y+6+1
0003d7 912d      	LD   R18,X+
0003d8 83ae      	STD  Y+6,R26
0003d9 83bf      	STD  Y+6+1,R27
                 _0x2040054:
0003da 940e 04c6 	CALL SUBOPT_0x8
0003dc 3050      	CPI  R21,0
0003dd f009      	BREQ _0x2040055
0003de 5051      	SUBI R21,LOW(1)
                 _0x2040055:
0003df 5031      	SUBI R19,LOW(1)
0003e0 cfea      	RJMP _0x2040050
                 _0x2040052:
0003e1 c04b      	RJMP _0x2040056
                 _0x204004F:
                 _0x2040058:
0003e2 e320      	LDI  R18,LOW(48)
0003e3 81ee      	LDD  R30,Y+6
0003e4 81ff      	LDD  R31,Y+6+1
0003e5 940e 0513 	CALL __GETW1PF
0003e7 87e8      	STD  Y+8,R30
0003e8 87f9      	STD  Y+8+1,R31
0003e9 81ee      	LDD  R30,Y+6
0003ea 81ff      	LDD  R31,Y+6+1
0003eb 9632      	ADIW R30,2
0003ec 83ee      	STD  Y+6,R30
0003ed 83ff      	STD  Y+6+1,R31
                 _0x204005A:
0003ee 85e8      	LDD  R30,Y+8
0003ef 85f9      	LDD  R31,Y+8+1
0003f0 85aa      	LDD  R26,Y+10
0003f1 85bb      	LDD  R27,Y+10+1
0003f2 17ae      	CP   R26,R30
0003f3 07bf      	CPC  R27,R31
0003f4 f050      	BRLO _0x204005C
0003f5 5f2f      	SUBI R18,-LOW(1)
0003f6 85a8      	LDD  R26,Y+8
0003f7 85b9      	LDD  R27,Y+8+1
0003f8 85ea      	LDD  R30,Y+10
0003f9 85fb      	LDD  R31,Y+10+1
0003fa 1bea      	SUB  R30,R26
0003fb 0bfb      	SBC  R31,R27
0003fc 87ea      	STD  Y+10,R30
0003fd 87fb      	STD  Y+10+1,R31
0003fe cfef      	RJMP _0x204005A
                 _0x204005C:
0003ff 332a      	CPI  R18,58
000400 f028      	BRLO _0x204005D
000401 ff03      	SBRS R16,3
000402 c002      	RJMP _0x204005E
000403 5f29      	SUBI R18,-LOW(7)
000404 c001      	RJMP _0x204005F
                 _0x204005E:
000405 5d29      	SUBI R18,-LOW(39)
                 _0x204005F:
                 _0x204005D:
000406 fd04      	SBRC R16,4
000407 c01a      	RJMP _0x2040061
000408 3321      	CPI  R18,49
000409 f420      	BRSH _0x2040063
00040a 85a8      	LDD  R26,Y+8
00040b 85b9      	LDD  R27,Y+8+1
00040c 9711      	SBIW R26,1
00040d f409      	BRNE _0x2040062
                 _0x2040063:
00040e c009      	RJMP _0x20400CD
                 _0x2040062:
00040f 1753      	CP   R21,R19
000410 f010      	BRLO _0x2040067
000411 ff00      	SBRS R16,0
000412 c001      	RJMP _0x2040068
                 _0x2040067:
000413 c013      	RJMP _0x2040066
                 _0x2040068:
000414 e220      	LDI  R18,LOW(32)
000415 ff07      	SBRS R16,7
000416 c00b      	RJMP _0x2040069
000417 e320      	LDI  R18,LOW(48)
                 _0x20400CD:
000418 6100      	ORI  R16,LOW(16)
000419 ff02      	SBRS R16,2
00041a c007      	RJMP _0x204006A
00041b 7f0b      	ANDI R16,LOW(251)
00041c 934a      	ST   -Y,R20
00041d 940e 04d3 	CALL SUBOPT_0xA
00041f 3050      	CPI  R21,0
000420 f009      	BREQ _0x204006B
000421 5051      	SUBI R21,LOW(1)
                 _0x204006B:
                 _0x204006A:
                 _0x2040069:
                 _0x2040061:
000422 940e 04c6 	CALL SUBOPT_0x8
000424 3050      	CPI  R21,0
000425 f009      	BREQ _0x204006C
000426 5051      	SUBI R21,LOW(1)
                 _0x204006C:
                 _0x2040066:
000427 5031      	SUBI R19,LOW(1)
000428 85a8      	LDD  R26,Y+8
000429 85b9      	LDD  R27,Y+8+1
00042a 9712      	SBIW R26,2
00042b f008      	BRLO _0x2040059
00042c cfb5      	RJMP _0x2040058
                 _0x2040059:
                 _0x2040056:
00042d ff00      	SBRS R16,0
00042e c008      	RJMP _0x204006D
                 _0x204006E:
00042f 3050      	CPI  R21,0
000430 f031      	BREQ _0x2040070
000431 5051      	SUBI R21,LOW(1)
000432 e2e0      	LDI  R30,LOW(32)
000433 93ea      	ST   -Y,R30
000434 940e 04d3 	CALL SUBOPT_0xA
000436 cff8      	RJMP _0x204006E
                 _0x2040070:
                 _0x204006D:
                 _0x2040071:
                 _0x2040030:
                 _0x20400CC:
000437 e010      	LDI  R17,LOW(0)
                 _0x204001B:
000438 ced8      	RJMP _0x2040016
                 _0x2040018:
000439 85ac      	LDD  R26,Y+12
00043a 85bd      	LDD  R27,Y+12+1
00043b 91ed      	LD   R30,X+
00043c 91fd      	LD   R31,X+
00043d 940e 04ea 	CALL __LOADLOCR6
00043f 9664      	ADIW R28,20
000440 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000441 92ff      	PUSH R15
000442 2ef8      	MOV  R15,R24
000443 9726      	SBIW R28,6
000444 940e 04e3 	CALL __SAVELOCR6
000446 01fe      	MOVW R30,R28
000447 940e 04f1 	CALL __ADDW1R15
                +
000449 8546     +LDD R20 , Z + 14
00044a 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
00044b 2e04      	MOV  R0,R20
00044c 2a05      	OR   R0,R21
00044d f419      	BRNE _0x2040072
00044e efef      	LDI  R30,LOW(65535)
00044f efff      	LDI  R31,HIGH(65535)
000450 c021      	RJMP _0x20C0001
                 _0x2040072:
000451 01de      	MOVW R26,R28
000452 9618      	ADIW R26,8
000453 940e 04f5 	CALL __ADDW2R15
000455 018d      	MOVW R16,R26
                +
000456 8748     +STD Y + 8 , R20
000457 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
000458 e0e0      	LDI  R30,LOW(0)
000459 87ea      	STD  Y+10,R30
00045a 87eb      	STD  Y+10+1,R30
00045b 01de      	MOVW R26,R28
00045c 961c      	ADIW R26,12
00045d 940e 04f5 	CALL __ADDW2R15
00045f 91ed      	LD   R30,X+
000460 91fd      	LD   R31,X+
000461 93fa      	ST   -Y,R31
000462 93ea      	ST   -Y,R30
000463 931a      	ST   -Y,R17
000464 930a      	ST   -Y,R16
000465 eced      	LDI  R30,LOW(_put_buff_G102)
000466 e0f2      	LDI  R31,HIGH(_put_buff_G102)
000467 93fa      	ST   -Y,R31
000468 93ea      	ST   -Y,R30
000469 01de      	MOVW R26,R28
00046a 961c      	ADIW R26,12
00046b de99      	RCALL __print_G102
00046c 019f      	MOVW R18,R30
00046d 85a8      	LDD  R26,Y+8
00046e 85b9      	LDD  R27,Y+8+1
00046f e0e0      	LDI  R30,LOW(0)
000470 93ec      	ST   X,R30
000471 01f9      	MOVW R30,R18
                 _0x20C0001:
000472 940e 04ea 	CALL __LOADLOCR6
000474 962c      	ADIW R28,12
000475 90ff      	POP  R15
000476 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000477 93ba      	ST   -Y,R27
000478 93aa      	ST   -Y,R26
000479 91a9          ld   r26,y+
00047a 91b9          ld   r27,y+
00047b 27ee          clr  r30
00047c 27ff          clr  r31
                 strlen0:
00047d 916d          ld   r22,x+
00047e 2366          tst  r22
00047f f011          breq strlen1
000480 9631          adiw r30,1
000481 cffb          rjmp strlen0
                 strlen1:
000482 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000483 93ba      	ST   -Y,R27
000484 93aa      	ST   -Y,R26
000485 27aa          clr  r26
000486 27bb          clr  r27
000487 91e9          ld   r30,y+
000488 91f9          ld   r31,y+
                 strlenf0:
000489 9005      	lpm  r0,z+
00048a 2000          tst  r0
00048b f011          breq strlenf1
00048c 9611          adiw r26,1
00048d cffb          rjmp strlenf0
                 strlenf1:
00048e 01fd          movw r30,r26
00048f 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _data:
00030a           	.BYTE 0x4
                 _temperature:
00030e           	.BYTE 0x4
                 _container:
000312           	.BYTE 0x10
                 _number:
000322           	.BYTE 0x29
                 __seed_G100:
00034b           	.BYTE 0x4
                 __base_y_G101:
00034f           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000490 e6a4      	LDI  R26,LOW(100)
000491 e0b0      	LDI  R27,0
000492 940c 0622 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x1:
000494 940e 026d 	CALL _lcd_clear
000496 e0e0      	LDI  R30,LOW(0)
000497 93ea      	ST   -Y,R30
000498 e0a0      	LDI  R26,LOW(0)
000499 940c 025b 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x2:
00049b 940e 028d 	CALL _lcd_puts
00049d e0e0      	LDI  R30,LOW(0)
00049e 93ea      	ST   -Y,R30
00049f e0a1      	LDI  R26,LOW(1)
0004a0 940c 025b 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
0004a2 940e 028d 	CALL _lcd_puts
0004a4 eea8      	LDI  R26,LOW(1000)
0004a5 e0b3      	LDI  R27,HIGH(1000)
0004a6 940c 0622 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
0004a8 e2a2      	LDI  R26,LOW(_number)
0004a9 e0b3      	LDI  R27,HIGH(_number)
0004aa 0da4      	ADD  R26,R4
0004ab 1db5      	ADC  R27,R5
0004ac 91ec      	LD   R30,X
0004ad bbe8      	OUT  0x18,R30
0004ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
0004af 91a0 030e 	LDS  R26,_temperature
0004b1 91b0 030f 	LDS  R27,_temperature+1
0004b3 9180 0310 	LDS  R24,_temperature+2
0004b5 9190 0311 	LDS  R25,_temperature+3
0004b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
0004b8 940e 024e 	CALL __lcd_write_data
0004ba e0a3      	LDI  R26,LOW(3)
0004bb e0b0      	LDI  R27,0
0004bc 940c 0622 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7:
0004be e3a0      	LDI  R26,LOW(48)
0004bf 940e 0239 	CALL __lcd_write_nibble_G101
                +
0004c1 ec88     +LDI R24 , LOW ( 200 )
0004c2 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0004c3 9701     +SBIW R24 , 1
0004c4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0004c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x8:
0004c6 932a      	ST   -Y,R18
0004c7 85ad      	LDD  R26,Y+13
0004c8 85be      	LDD  R27,Y+13+1
0004c9 85ef      	LDD  R30,Y+15
0004ca 89f8      	LDD  R31,Y+15+1
0004cb 9509      	ICALL
0004cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x9:
0004cd 89e8      	LDD  R30,Y+16
0004ce 89f9      	LDD  R31,Y+16+1
0004cf 9734      	SBIW R30,4
0004d0 8be8      	STD  Y+16,R30
0004d1 8bf9      	STD  Y+16+1,R31
0004d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
0004d3 85ad      	LDD  R26,Y+13
0004d4 85be      	LDD  R27,Y+13+1
0004d5 85ef      	LDD  R30,Y+15
0004d6 89f8      	LDD  R31,Y+15+1
0004d7 9509      	ICALL
0004d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xB:
0004d9 89a8      	LDD  R26,Y+16
0004da 89b9      	LDD  R27,Y+16+1
0004db 9614      	ADIW R26,4
0004dc 91ed      	LD   R30,X+
0004dd 91fd      	LD   R31,X+
0004de 83ee      	STD  Y+6,R30
0004df 83ff      	STD  Y+6+1,R31
0004e0 81ae      	LDD  R26,Y+6
0004e1 81bf      	LDD  R27,Y+6+1
0004e2 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0004e3 935a      	ST   -Y,R21
                 __SAVELOCR5:
0004e4 934a      	ST   -Y,R20
                 __SAVELOCR4:
0004e5 933a      	ST   -Y,R19
                 __SAVELOCR3:
0004e6 932a      	ST   -Y,R18
                 __SAVELOCR2:
0004e7 931a      	ST   -Y,R17
0004e8 930a      	ST   -Y,R16
0004e9 9508      	RET
                 
                 __LOADLOCR6:
0004ea 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0004eb 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0004ec 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0004ed 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0004ee 8119      	LDD  R17,Y+1
0004ef 8108      	LD   R16,Y
0004f0 9508      	RET
                 
                 __ADDW1R15:
0004f1 2400      	CLR  R0
0004f2 0def      	ADD  R30,R15
0004f3 1df0      	ADC  R31,R0
0004f4 9508      	RET
                 
                 __ADDW2R15:
0004f5 2400      	CLR  R0
0004f6 0daf      	ADD  R26,R15
0004f7 1db0      	ADC  R27,R0
0004f8 9508      	RET
                 
                 __ANEGW1:
0004f9 95f1      	NEG  R31
0004fa 95e1      	NEG  R30
0004fb 40f0      	SBCI R31,0
0004fc 9508      	RET
                 
                 __ANEGD1:
0004fd 95f0      	COM  R31
0004fe 9560      	COM  R22
0004ff 9570      	COM  R23
000500 95e1      	NEG  R30
000501 4fff      	SBCI R31,-1
000502 4f6f      	SBCI R22,-1
000503 4f7f      	SBCI R23,-1
000504 9508      	RET
                 
                 __CWD1:
000505 2f6f      	MOV  R22,R31
000506 0f66      	ADD  R22,R22
000507 0b66      	SBC  R22,R22
000508 2f76      	MOV  R23,R22
000509 9508      	RET
                 
                 __GETW1P:
00050a 91ed      	LD   R30,X+
00050b 91fc      	LD   R31,X
00050c 9711      	SBIW R26,1
00050d 9508      	RET
                 
                 __PUTDP1:
00050e 93ed      	ST   X+,R30
00050f 93fd      	ST   X+,R31
000510 936d      	ST   X+,R22
000511 937c      	ST   X,R23
000512 9508      	RET
                 
                 __GETW1PF:
000513 9005      	LPM  R0,Z+
000514 91f4      	LPM  R31,Z
000515 2de0      	MOV  R30,R0
000516 9508      	RET
                 
                 __PUTPARD1:
000517 937a      	ST   -Y,R23
000518 936a      	ST   -Y,R22
000519 93fa      	ST   -Y,R31
00051a 93ea      	ST   -Y,R30
00051b 9508      	RET
                 
                 __PUTPARD2:
00051c 939a      	ST   -Y,R25
00051d 938a      	ST   -Y,R24
00051e 93ba      	ST   -Y,R27
00051f 93aa      	ST   -Y,R26
000520 9508      	RET
                 
                 __ROUND_REPACK:
000521 2355      	TST  R21
000522 f442      	BRPL __REPACK
000523 3850      	CPI  R21,0x80
000524 f411      	BRNE __ROUND_REPACK0
000525 ffe0      	SBRS R30,0
000526 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000527 9631      	ADIW R30,1
000528 1f69      	ADC  R22,R25
000529 1f79      	ADC  R23,R25
00052a f06b      	BRVS __REPACK1
                 
                 __REPACK:
00052b e850      	LDI  R21,0x80
00052c 2757      	EOR  R21,R23
00052d f411      	BRNE __REPACK0
00052e 935f      	PUSH R21
00052f c073      	RJMP __ZERORES
                 __REPACK0:
000530 3f5f      	CPI  R21,0xFF
000531 f031      	BREQ __REPACK1
000532 0f66      	LSL  R22
000533 0c00      	LSL  R0
000534 9557      	ROR  R21
000535 9567      	ROR  R22
000536 2f75      	MOV  R23,R21
000537 9508      	RET
                 __REPACK1:
000538 935f      	PUSH R21
000539 2000      	TST  R0
00053a f00a      	BRMI __REPACK2
00053b c072      	RJMP __MAXRES
                 __REPACK2:
00053c c06b      	RJMP __MINRES
                 
                 __UNPACK:
00053d e850      	LDI  R21,0x80
00053e 2e19      	MOV  R1,R25
00053f 2215      	AND  R1,R21
000540 0f88      	LSL  R24
000541 1f99      	ROL  R25
000542 2795      	EOR  R25,R21
000543 0f55      	LSL  R21
000544 9587      	ROR  R24
                 
                 __UNPACK1:
000545 e850      	LDI  R21,0x80
000546 2e07      	MOV  R0,R23
000547 2205      	AND  R0,R21
000548 0f66      	LSL  R22
000549 1f77      	ROL  R23
00054a 2775      	EOR  R23,R21
00054b 0f55      	LSL  R21
00054c 9567      	ROR  R22
00054d 9508      	RET
                 
                 __CFD1U:
00054e 9468      	SET
00054f c001      	RJMP __CFD1U0
                 __CFD1:
000550 94e8      	CLT
                 __CFD1U0:
000551 935f      	PUSH R21
000552 dff2      	RCALL __UNPACK1
000553 3870      	CPI  R23,0x80
000554 f018      	BRLO __CFD10
000555 3f7f      	CPI  R23,0xFF
000556 f408      	BRCC __CFD10
000557 c04b      	RJMP __ZERORES
                 __CFD10:
000558 e156      	LDI  R21,22
000559 1b57      	SUB  R21,R23
00055a f4aa      	BRPL __CFD11
00055b 9551      	NEG  R21
00055c 3058      	CPI  R21,8
00055d f40e      	BRTC __CFD19
00055e 3059      	CPI  R21,9
                 __CFD19:
00055f f030      	BRLO __CFD17
000560 efef      	SER  R30
000561 efff      	SER  R31
000562 ef6f      	SER  R22
000563 e77f      	LDI  R23,0x7F
000564 f977      	BLD  R23,7
000565 c01a      	RJMP __CFD15
                 __CFD17:
000566 2777      	CLR  R23
000567 2355      	TST  R21
000568 f0b9      	BREQ __CFD15
                 __CFD18:
000569 0fee      	LSL  R30
00056a 1fff      	ROL  R31
00056b 1f66      	ROL  R22
00056c 1f77      	ROL  R23
00056d 955a      	DEC  R21
00056e f7d1      	BRNE __CFD18
00056f c010      	RJMP __CFD15
                 __CFD11:
000570 2777      	CLR  R23
                 __CFD12:
000571 3058      	CPI  R21,8
000572 f028      	BRLO __CFD13
000573 2fef      	MOV  R30,R31
000574 2ff6      	MOV  R31,R22
000575 2f67      	MOV  R22,R23
000576 5058      	SUBI R21,8
000577 cff9      	RJMP __CFD12
                 __CFD13:
000578 2355      	TST  R21
000579 f031      	BREQ __CFD15
                 __CFD14:
00057a 9576      	LSR  R23
00057b 9567      	ROR  R22
00057c 95f7      	ROR  R31
00057d 95e7      	ROR  R30
00057e 955a      	DEC  R21
00057f f7d1      	BRNE __CFD14
                 __CFD15:
000580 2000      	TST  R0
000581 f40a      	BRPL __CFD16
000582 df7a      	RCALL __ANEGD1
                 __CFD16:
000583 915f      	POP  R21
000584 9508      	RET
                 
                 __CDF1U:
000585 9468      	SET
000586 c001      	RJMP __CDF1U0
                 __CDF1:
000587 94e8      	CLT
                 __CDF1U0:
000588 9730      	SBIW R30,0
000589 4060      	SBCI R22,0
00058a 4070      	SBCI R23,0
00058b f0b1      	BREQ __CDF10
00058c 2400      	CLR  R0
00058d f026      	BRTS __CDF11
00058e 2377      	TST  R23
00058f f412      	BRPL __CDF11
000590 9400      	COM  R0
000591 df6b      	RCALL __ANEGD1
                 __CDF11:
000592 2e17      	MOV  R1,R23
000593 e17e      	LDI  R23,30
000594 2011      	TST  R1
                 __CDF12:
000595 f032      	BRMI __CDF13
000596 957a      	DEC  R23
000597 0fee      	LSL  R30
000598 1fff      	ROL  R31
000599 1f66      	ROL  R22
00059a 1c11      	ROL  R1
00059b cff9      	RJMP __CDF12
                 __CDF13:
00059c 2fef      	MOV  R30,R31
00059d 2ff6      	MOV  R31,R22
00059e 2d61      	MOV  R22,R1
00059f 935f      	PUSH R21
0005a0 df8a      	RCALL __REPACK
0005a1 915f      	POP  R21
                 __CDF10:
0005a2 9508      	RET
                 
                 __ZERORES:
0005a3 27ee      	CLR  R30
0005a4 27ff      	CLR  R31
0005a5 01bf      	MOVW R22,R30
0005a6 915f      	POP  R21
0005a7 9508      	RET
                 
                 __MINRES:
0005a8 efef      	SER  R30
0005a9 efff      	SER  R31
0005aa e76f      	LDI  R22,0x7F
0005ab ef7f      	SER  R23
0005ac 915f      	POP  R21
0005ad 9508      	RET
                 
                 __MAXRES:
0005ae efef      	SER  R30
0005af efff      	SER  R31
0005b0 e76f      	LDI  R22,0x7F
0005b1 e77f      	LDI  R23,0x7F
0005b2 915f      	POP  R21
0005b3 9508      	RET
                 
                 __MULF12:
0005b4 935f      	PUSH R21
0005b5 df87      	RCALL __UNPACK
0005b6 3870      	CPI  R23,0x80
0005b7 f359      	BREQ __ZERORES
0005b8 3890      	CPI  R25,0x80
0005b9 f349      	BREQ __ZERORES
0005ba 2401      	EOR  R0,R1
0005bb 9408      	SEC
0005bc 1f79      	ADC  R23,R25
0005bd f423      	BRVC __MULF124
0005be f324      	BRLT __ZERORES
                 __MULF125:
0005bf 2000      	TST  R0
0005c0 f33a      	BRMI __MINRES
0005c1 cfec      	RJMP __MAXRES
                 __MULF124:
0005c2 920f      	PUSH R0
0005c3 931f      	PUSH R17
0005c4 932f      	PUSH R18
0005c5 933f      	PUSH R19
0005c6 934f      	PUSH R20
0005c7 2711      	CLR  R17
0005c8 2722      	CLR  R18
0005c9 2799      	CLR  R25
0005ca 9f68      	MUL  R22,R24
0005cb 01a0      	MOVW R20,R0
0005cc 9f8f      	MUL  R24,R31
0005cd 2d30      	MOV  R19,R0
0005ce 0d41      	ADD  R20,R1
0005cf 1f59      	ADC  R21,R25
0005d0 9f6b      	MUL  R22,R27
0005d1 0d30      	ADD  R19,R0
0005d2 1d41      	ADC  R20,R1
0005d3 1f59      	ADC  R21,R25
0005d4 9f8e      	MUL  R24,R30
0005d5 d027      	RCALL __MULF126
0005d6 9fbf      	MUL  R27,R31
0005d7 d025      	RCALL __MULF126
0005d8 9f6a      	MUL  R22,R26
0005d9 d023      	RCALL __MULF126
0005da 9fbe      	MUL  R27,R30
0005db d01d      	RCALL __MULF127
0005dc 9faf      	MUL  R26,R31
0005dd d01b      	RCALL __MULF127
0005de 9fae      	MUL  R26,R30
0005df 0d11      	ADD  R17,R1
0005e0 1f29      	ADC  R18,R25
0005e1 1f39      	ADC  R19,R25
0005e2 1f49      	ADC  R20,R25
0005e3 1f59      	ADC  R21,R25
0005e4 2fe3      	MOV  R30,R19
0005e5 2ff4      	MOV  R31,R20
0005e6 2f65      	MOV  R22,R21
0005e7 2f52      	MOV  R21,R18
0005e8 914f      	POP  R20
0005e9 913f      	POP  R19
0005ea 912f      	POP  R18
0005eb 911f      	POP  R17
0005ec 900f      	POP  R0
0005ed 2366      	TST  R22
0005ee f02a      	BRMI __MULF122
0005ef 0f55      	LSL  R21
0005f0 1fee      	ROL  R30
0005f1 1fff      	ROL  R31
0005f2 1f66      	ROL  R22
0005f3 c002      	RJMP __MULF123
                 __MULF122:
0005f4 9573      	INC  R23
0005f5 f24b      	BRVS __MULF125
                 __MULF123:
0005f6 df2a      	RCALL __ROUND_REPACK
0005f7 915f      	POP  R21
0005f8 9508      	RET
                 
                 __MULF127:
0005f9 0d10      	ADD  R17,R0
0005fa 1d21      	ADC  R18,R1
0005fb 1f39      	ADC  R19,R25
0005fc c002      	RJMP __MULF128
                 __MULF126:
0005fd 0d20      	ADD  R18,R0
0005fe 1d31      	ADC  R19,R1
                 __MULF128:
0005ff 1f49      	ADC  R20,R25
000600 1f59      	ADC  R21,R25
000601 9508      	RET
                 
                 __CMPF12:
000602 2399      	TST  R25
000603 f09a      	BRMI __CMPF120
000604 2377      	TST  R23
000605 f042      	BRMI __CMPF121
000606 1797      	CP   R25,R23
000607 f048      	BRLO __CMPF122
000608 f429      	BRNE __CMPF121
000609 17ae      	CP   R26,R30
00060a 07bf      	CPC  R27,R31
00060b 0786      	CPC  R24,R22
00060c f020      	BRLO __CMPF122
00060d f031      	BREQ __CMPF123
                 __CMPF121:
00060e 9498      	CLZ
00060f 9488      	CLC
000610 9508      	RET
                 __CMPF122:
000611 9498      	CLZ
000612 9408      	SEC
000613 9508      	RET
                 __CMPF123:
000614 9418      	SEZ
000615 9488      	CLC
000616 9508      	RET
                 __CMPF120:
000617 2377      	TST  R23
000618 f7c2      	BRPL __CMPF122
000619 1797      	CP   R25,R23
00061a f398      	BRLO __CMPF121
00061b f7a9      	BRNE __CMPF122
00061c 17ea      	CP   R30,R26
00061d 07fb      	CPC  R31,R27
00061e 0768      	CPC  R22,R24
00061f f388      	BRLO __CMPF122
000620 f399      	BREQ __CMPF123
000621 cfec      	RJMP __CMPF121
                 
                 _delay_ms:
000622 9610      	adiw r26,0
000623 f039      	breq __delay_ms1
                 __delay_ms0:
000624 95a8      	wdr
                +
000625 ed80     +LDI R24 , LOW ( 0x7D0 )
000626 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000627 9701     +SBIW R24 , 1
000628 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000629 9711      	sbiw r26,1
00062a f7c9      	brne __delay_ms0
                 __delay_ms1:
00062b 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  31 r1 :  13 r2 :   0 r3 :   0 r4 :   6 r5 :   4 r6 :   2 r7 :   2 
r8 :   4 r9 :   4 r10:   0 r11:   2 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  41 r17:  52 r18:  45 r19:  17 r20:  20 r21:  66 r22:  44 r23:  40 
r24:  36 r25:  29 r26: 123 r27:  56 r28:  14 r29:   1 r30: 244 r31:  88 
x  :  36 y  : 150 z  :  17 
Registers used: 29 out of 35 (82.9%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  18 add   :  11 
adiw  :  26 and   :   2 andi  :   6 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   1 break :   0 breq  :  26 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  15 
brlt  :   1 brmi  :   7 brne  :  39 brpl  :   6 brsh  :   3 brtc  :   1 
brts  :   1 brvc  :   1 brvs  :   2 bset  :   0 bst   :   0 call  :  84 
cbi   :   9 cbr   :   0 clc   :   2 clh   :   0 cli   :   1 cln   :   0 
clr   :  20 cls   :   0 clt   :   2 clv   :   0 clz   :   2 com   :   4 
cp    :  11 cpc   :   8 cpi   :  42 cpse  :   0 dec   :   9 des   :   0 
eor   :   4 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   4 inc   :   3 jmp   :  28 ld    :  30 ldd   :  65 ldi   : 163 
lds   :   8 lpm   :  14 lsl   :   9 lsr   :   1 mov   :  51 movw  :  26 
mul   :  10 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   2 
ori   :   8 out   :  45 pop   :  12 push  :  11 rcall :  42 ret   :  51 
reti  :   0 rjmp  :  82 rol   :  11 ror   :   7 sbc   :   2 sbci  :   8 
sbi   :  11 sbic  :   1 sbis  :   2 sbiw  :  19 sbr   :   0 sbrc  :   2 
sbrs  :  11 sec   :   2 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  66 std   :  30 sts   :  14 sub   :   2 subi  :  19 swap  :   1 
tst   :  16 wdr   :   1 
Instructions used: 77 out of 116 (66.4%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000c58   2810    350   3160   32768   9.6%
[.dseg] 0x000060 0x000353      0    243    243    2048  11.9%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 11 warnings
